name: PR Checks
on:
  pull_request:
    branches:
      - master
      - staging
    types: [opened, synchronize, reopened, labeled, unlabeled]

jobs:
  check-labels:
    runs-on: ubuntu-latest
    outputs:
        skip-tests: ${{ contains(github.event.pull_request.labels.*.name, 'skip-bittensor-tests') }}
        run-cli-tests: ${{ contains(github.event.pull_request.labels.*.name, 'run-bittensor-cli-tests') }}
        run-sdk-tests: ${{ contains(github.event.pull_request.labels.*.name, 'run-bittensor-sdk-tests') }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

  run-sdk-tests:
    needs: check-labels
    if: needs.check-labels.outputs.run-sdk-tests == 'true'
    runs-on: ubuntu-latest
    env:
      RELEASE_NAME: development
      RUSTV: stable
      RUST_BACKTRACE: full
      RUST_BIN_DIR: target/x86_64-unknown-linux-gnu
      TARGET: x86_64-unknown-linux-gnu
    steps:
#      - name: Check-out repository under $GITHUB_WORKSPACE
#        uses: actions/checkout@v4
#
#      - name: Utilize Shared Rust Cache
#        uses: Swatinem/rust-cache@v2
#
#      - name: Install dependencies
#        run: |
#          sudo apt-get update &&
#          sudo apt-get install -y clang curl libssl-dev llvm libudev-dev protobuf-compiler

      - name: Create python env
        working-directory: ${{ github.workspace }}
        run: |
          python3 -m venv venv
          source venv/bin/activate

      - name: Clone Bittensor SDK repo
        working-directory: ${{ github.workspace }}
        run: git clone https://github.com/opentensor/bittensor.git

      - name: Setup Bittensor SDK repo
        working-directory: ${{ github.workspace }}/bittensor
        run: |
          git checkout staging
          source ${{ github.workspace }}/venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install '.[dev]'
          pip install maturin

      - name: Clone bittensor-wallet repo
        working-directory: ${{ github.workspace }}
        run: git clone https://github.com/opentensor/btwallet.git

      - name: Checkout PR branch
        working-directory: ${{ github.workspace }}/btwallet
        run: |
          git checkout ${{ github.event.pull_request.head.ref }}
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"

      - name: Build and install Rust Bittensor Wallet package into python virtual environment
        working-directory: ${{ github.workspace }}/btwallet
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          maturin develop

      - name: Add wasm32-unknown-unknown target
        run: |
          rustup target add wasm32-unknown-unknown --toolchain stable-x86_64-unknown-linux-gnu
          rustup component add rust-src --toolchain stable-x86_64-unknown-linux-gnu

      - name: Clone Subtensor repo
        working-directory: ${{ github.workspace }}
        run: git clone https://github.com/opentensor/subtensor.git

      - name: Checkout Subtensor repo to `devnet-ready` branch
        working-directory: ${{ github.workspace }}/subtensor
        run: git checkout devnet-ready

      - name: Run Bittensor SDK tests
        working-directory: ${{ github.workspace }}/bittensor
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          LOCALNET_SH_PATH="${{ github.workspace }}/subtensor/scripts/localnet.sh" pytest tests -s
