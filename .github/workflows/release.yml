name: Build and release wheels

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-24.04-arm
            target: aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU for ARM support
        if: matrix.platform.target == 'aarch64'
        uses: docker/setup-qemu-action@v3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build wheels
        uses: PyO3/maturin-action@v1.44.0
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter python3.9 python3.10 python3.11 python3.12 python3.13
          sccache: 'true'
          manylinux: auto
          before-script-linux: |
            if [ "${{ matrix.platform.target }}" = "aarch64" ]; then
              sudo apt-get update
              sudo apt-get install -y apt-utils pkg-config gcc-aarch64-linux-gnu libssl-dev build-essential
          
              # Установите PKG_CONFIG_PATH для aarch64
              export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig
              
              # Проверьте, что pkg-config видит openssl
              echo "Checking pkg-config for openssl:"
              pkg-config --cflags openssl
              pkg-config --libs openssl
              
              # Установите OPENSSL_DIR. Иногда openssl-sys предпочитает его
              export OPENSSL_DIR="/usr" 
              # Эти переменные могут не понадобиться, если pkg-config работает
              # Но на всякий случай оставим их, т.к. они были в вашем конфиге
              export OPENSSL_INCLUDE_DIR="/usr/include/aarch64-linux-gnu" 
              export OPENSSL_LIB_DIR="/usr/lib/aarch64-linux-gnu"
              export CFLAGS="-D__ARM_ARCH=8"
            else
              (apt-get update && apt-get install -y apt-utils pkg-config libssl-dev) || (yum install openssl openssl-devel -y)
            fi

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build wheels
        uses: PyO3/maturin-action@v1.44.0
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter python3.9 python3.10 python3.11 python3.12 python3.13
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        uses: PyO3/maturin-action@v1.44.0
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'

      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
        uses: PyO3/maturin-action@v1.44.0
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*
